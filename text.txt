1.what is JavaScript?
 JavaScript is a scripting language you can use to make web pages interactive. It is one of the core technologies of the web, along with HTML and CSS, and is supported by all modern browsers.
 
 JavaScript (js) is a light-weight object-oriented programming language which is used by several websites for scripting the webpages. It is an interpreted, full-fledged programming language that enables dynamic interactivity on websites when applied to an HTML document.
 
 

JavaScript is the Programming Language for the Web.

JavaScript can update and change both HTML and CSS.

JavaScript can calculate, manipulate and validate data.

 
 **************************************************
 
2. VAr vs Let

In the following text we come to know the major difference between var and let in javascript.

The main difference between let and var is that scope of a variable defined with let is limited to the block in which it is declared while variable declared with var has the global scope. So we can say that var is rather a keyword which defines a variable globally regardless of block scope.

The scope of let not only limited to the block in which it is defined but variable with let also do not get added with global window object even if it get declared outside of any block. But we can access variable with var from window object if it is defined globally.

Due to limited scope let variables are usually used when there is limited use of those variables such as in for loops, while loops or inside the scope of if conditions etc while var variable is used when value of variable need to be less change and used to accessed globally.

Also, one difference between var and let is variable with var can be redeclared to some other value while variable could not be redeclared if it is defined with let.

let a = 'hello'; // globally scoped
var b = 'world'; // globally scoped
console.log(window.a); // undefined
console.log(window.b); // 'world'
var a = 'hello';
var a = 'world'; // No problem, 'hello' is replaced.
let b = 'hello';
let b = 'world'; // SyntaxError: Identifier 'b' has already been declared


********************************************************

3. global scope vs
4. React 
*********************************
Redux
Redux is an application data-flow architecture which is used for predicting state changes in JavaScript applications. Redux is not a framework. Redux can be used with any other View library but mostly used with React.

The main concepts of Redux architecture are:

Store: The place where the entire state of the application is stored

Actions: JS objects which encapsulate the events triggered within the application. 

Reducers: Pure functions that modify the state of the application according to the actions triggered.

In Redux state is an immutable object. The state object cannot be changed directly in Redux. Triggering actions are the only way to modify the state. Every time the state is modified a new object should be returned which represents the modifications that are made to the state object.

Forbidden in Reducers
         Mutating the arguments passed
         Performing side effects like API calls, AJAX call, etc
         Calling other non-pure functions (Ex: date.now(), Math.random())
******************************************
5. hmtl and css
6. jquery
7. bootstarp
8. github
9. rebase,pull, push, reprojectary, mkdir, branch, merge,
10. this in js
11. closers in js
12. promise, async, and await in js
13. web wokers in js
14. event loop in js
15. data base , sql, nosql,
16. reacthooks 
17. sapn tag
Span tag in HTML is considered as an inline element. It is similar to the div tag, but the div tag is purposely used for block-level elements, whereas the span is used for inline elements. It’s mainly used whenever a user wants to do a grouping of the inline elements into their code structure. Span tag in HTML is used to give style to particular contents by using elements class or id attribute. It’s not possible to do visual change by itself using the span tag in the HTML document. It works as an inline tag in the HTML document. Using the span tags in your code helps to reduce code and HTML attributes.

******************************************
18.what is package.json file?


19.What is React JS?
React JS is a JavaScript library for creating user interfaces, making development of UI components easy and modular.
*********************************************************
20.States?
States are mutable and only used on top level component

They are reserved only for interactivity and component's event handlers may change to trigger a UI update

The state will be set with a default value when component mounts and will mutate in time based on user events generated
*********************************************************
When we want to pass any data from one component to another component, it is passed as a prop.

Props allow us to pass data from one component to another component

Props are immutable - a component cannot change its props however it is responsible for putting together

Props can be accessed as this.props
***********************************************
Lifecycle METHODS
 Every component will have following phases in its Lifecycle:

 Mounting phase - when the component is mounted to DOM tree

 Updating phase - when component is being updated with new state, new props are being received

 Unmounting phase - destroying component from DOM tree

Error Handling - Handling errors within React Component

 

Every phase in the lifecycle of a component has few methods which will be invoked during that phase of a component's lifecycle. We can override these methods to provide the desired functionality.

 

These methods can be used in the following cases:

For making an Ajax call, to set timer and to integrate with other frameworks

To avoid unnecessary re-rendering of a component

To update the component, based on the props changes

For clearing the values when component is unmounted
**************************************************************
componentDidMount():

Invoked immediately after the component is mounted to DOM tree

Now will have access to all the DOM nodes hence any initialization which requires DOM nodes should be done here

Best place for setting timers and handling Ajax request

*****************************************************
useState()
useState hook is used to add or initialize state value within a functional component.
*************************************
